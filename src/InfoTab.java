package reservations;

import javafx.geometry.HPos;
import javafx.geometry.Pos;
import javafx.geometry.Side;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;
import reservations.FXHelper;
import javafx.stage.Modality;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.event.EventHandler;
import javafx.scene.text.Text;

import javafx.scene.text.Font;

public class InfoTab extends Stage {

    public InfoTab(Stage gui) {

        stage = new Stage();

        stage.initModality(Modality.APPLICATION_MODAL);
        stage.initOwner(gui);

        stage.setTitle("Overview INFO");
        FXHelper.prepStage(stage, 600, 650, 500, 500);
        BorderPane borderPane = new BorderPane();
        Scene scene = new Scene(borderPane, 400, 250, Color.WHITE);
        scene.getStylesheets().add("File:../ressources/stylesheet.css");
        borderPane.getStyleClass().add("infobox");
        TabPane tabPane = new TabPane();

        String l = "Boost Software License - Version 1.0 - August 17th, 2003\n\n"
                + " Permission is hereby granted, free of charge, to any person or organization \n"
                + "obtaining a copy of the software and accompanying documentation covered by \n"
                + "this license (the 'Software') to use, reproduce, display, distribute, \n"
                + "execute, and transmit the Software, and to prepare derivative works of the \n"
                + "Software, and to permit third-parties to whom the Software is furnished to \n"
                + "do so, all subject to the following: \n\n"
                + "The copyright notices in the Software and this entire statement, including \n"
                + "the above license grant, this restriction and the following disclaimer, \n"
                + "must be included in all copies of the Software, in whole or in part, and \n"
                + "all derivative works of the Software, unless such copies or derivative \n"
                + "works are solely in the form of machine-executable object code generated by \n"
                + "a source language processor. \n\n"
                + "THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \n"
                + "IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n"
                + "FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT \n"
                + "SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE \n"
                + "FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, \n"
                + "ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \n"
                + "DEALINGS IN THE SOFTWARE.";

        VBox boxLicense = new VBox();
        Text licenseText = new Text(l);
        licenseText.setTextAlignment(TextAlignment.CENTER);
        boxLicense.getChildren().add(licenseText);
        Tab tabLicense = FXHelper.createTab("License", boxLicense);

        VBox boxInfo = new VBox();
        // Text infoText = new Text(i);
        // infoText.setTextAlignment(TextAlignment.CENTER);
        GridPane grid = createGridPane();
        grid.setAlignment(Pos.CENTER);
        boxInfo.getChildren().add(grid);
        // boxInfo.setAlignment(Pos.CENTER_RIGHT);
        Tab tabInfo = FXHelper.createTab("Info", boxInfo);

        tabPane.getTabs().addAll(tabLicense, tabInfo);

        // bind to take available space
        borderPane.prefHeightProperty().bind(scene.heightProperty());
        borderPane.prefWidthProperty().bind(scene.widthProperty());

        borderPane.setCenter(tabPane);

        stage.setScene(scene);
        stage.show();

        scene.setOnKeyPressed(new EventHandler<KeyEvent>() {
            @Override
            public void handle(KeyEvent key) {
                if (key.getCode().equals(KeyCode.ESCAPE)) {
                    stage.close();
                }
                if (FXHelper.exitComb.match(key)) {
                    System.exit(0);
                }
            }
        });
    }

    private GridPane createGridPane() {
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(10, 10, 20, 10));
        grid.setVgap(8);
        grid.setHgap(10);
        final Text heading = new Text("Control Overview");
        heading.setId("headingText");
        grid.add(heading, 0, 0, 2, 1);
        grid.setHalignment(heading, HPos.RIGHT);
        Label quit = new Label("Exit Application: ");
        grid.add(quit, 0, 2);
        // quit.setFont(new Font(30.0));
        grid.setHalignment(quit, HPos.RIGHT);
        Label quitSc = new Label("CRTL + Q");
        grid.add(quitSc, 1, 2);
        Label back = new Label("Go Back or Logout: ");
        grid.add(back, 0, 3);
        grid.setHalignment(back, HPos.RIGHT);
        Label backSc = new Label("ESCAPE");
        grid.add(backSc, 1, 3);
        Label infoSt = new Label("Open this Info Window: ");
        grid.add(infoSt, 0, 4);
        grid.setHalignment(infoSt, HPos.RIGHT);
        Label infoSc = new Label("CRTL + I");
        grid.add(infoSc, 1, 4);
        Label book = new Label("Book Tickets: ");
        grid.add(book, 0, 5);
        grid.setHalignment(book, HPos.RIGHT);
        Label bookSc = new Label("CRTL + B");
        grid.add(bookSc, 1, 5);
        Label history = new Label("Show History: ");
        grid.add(history, 0, 6);
        grid.setHalignment(history, HPos.RIGHT);
        Label historySc = new Label("CRTl + H");
        grid.add(historySc, 1, 6);

        return grid;

    }

    private Stage stage;

}
